pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = T)
geneList_DESeq1 <- resSig1$log2FoldChange
names(geneList_DESeq1) <- rownames(resSig1)
#Molecular Function
ego1MF <- enrichGO(gene = names(geneList_DESeq1), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "MF", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego1MF)
goplot(ego1MF)
#Cellular Component
ego1CC <- enrichGO(gene = names(geneList_DESeq1), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "CC", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego1CC)
#Biological Process
ego1BP <- enrichGO(gene = names(geneList_DESeq1), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "BP", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego1BP)
resSig1_KEGG <- subset(res1, padj < 0.5)
resSig1_KEGG <- resSig1_KEGG[order(resSig1_KEGG$log2FoldChange, decreasing=T), ]
geneList_DESeq1_1 <- resSig1_KEGG$log2FoldChange
names(geneList_DESeq1_1) <- row.names(resSig1_KEGG)
gene_df1 <- bitr(names(geneList_DESeq1_1), fromType = "ENSEMBL",
toType = "ENTREZID", OrgDb = org.Hs.eg.db)
geneList_df1 <- resSig1_KEGG$log2FoldChange
names(geneList_df1) <- gene_df1$ENTREZID
kk1 <- enrichKEGG(gene = gene_df1$ENTREZID, organism = 'hsa', pvalueCutoff = 0.1)
head(kk1)
metadata$Disease.State <- as.factor(metadata$Disease.State)
metadata$Disease.State <- relevel(metadata$Disease.State, "non-inflamed")
metadata$Disease.State1 <- as.factor(metadata$Disease.State)
metadata$Disease.State1 <- relevel(metadata$Disease.State, "inflamed")
dds2 <- DESeqDataSetFromMatrix(df1, colData=metadata, design = ~ Gender + Age.Level  + Development.Stage + Disease.State)
rld2 <- rlog(dds2, blind=FALSE)
dds2_SI <- DESeqDataSetFromMatrix(df1, colData=metadata, design = ~ Gender + Age.Level  + Development.Stage + Disease.State1)
rld2_SI <- rlog(dds2_SI, blind=FALSE)
plotPCA(rld2, intgroup = c("Disease", "Disease.State"))
dds2 <- DESeq(dds2)
res2<-results(dds2)
summary(res2)
dds2_SI <- DESeq(dds2_SI)
res2_SI <- results(dds2_SI)
summary(res2_SI)
resSig2 <- subset(res2, padj < 0.1)
resSig2 <- resSig2[order(resSig2$log2FoldChange, decreasing=T), ]
head(resSig2)
resSig2_SI <- subset(res2_SI, padj < 0.1)
resSig2_SI <- resSig2_SI[order(resSig2_SI$log2FoldChange, decreasing=T), ]
head(resSig2_SI)
#INF vs NINF
res2_inf_noninf <- lfcShrink(dds2, coef="Disease.State_inflamed_vs_non.inflamed", type="normal")
res2_inf_noninf <- subset(res2_inf_noninf, padj < 0.1)
res2_inf_noninf <- res2_inf_noninf[order(res2_inf_noninf$log2FoldChange, decreasing=T), ]
head(res2_inf_noninf)
#STEN vs NINF
res2_sten_noninf <- lfcShrink(dds2, coef = "Disease.State_stenotic_vs_non.inflamed", type = "normal")
res2_sten_noninf <- subset(res2_sten_noninf, padj < 0.1)
res2_sten_noninf <- res2_sten_noninf[order(res2_sten_noninf$log2FoldChange, decreasing=T), ]
head(res2_sten_noninf)
#STEN vs INF
res2_sten_inf <- lfcShrink(dds2_SI, coef = "Disease.State1_stenotic_vs_inflamed", type = "normal")
res2_sten_inf <- subset(res2_sten_inf, padj < 0.1)
res2_sten_inf <- res2_sten_inf[order(res2_sten_inf$log2FoldChange, decreasing=T), ]
head(res2_sten_inf)
resLFC2 <- results(dds2, lfcThreshold=1)
summary(resLFC2)
#INF vs NINF
topGenes2_IN<-rownames(res2_inf_noninf[order(res2_inf_noninf$padj),])
geneCounts2_IN <- plotCounts(dds2, gene=topGenes2_IN[1],
intgroup=c("Disease.State"), returnData=T)
ggplot(geneCounts2_IN, aes(x=Disease.State, y=count, fill=Disease.State)) +
scale_y_log10() + geom_dotplot(binaxis="y", stackdir="center")
#STEN vs NINF
topGenes2_SN<-rownames(res2_sten_noninf[order(res2_sten_noninf$padj),])
geneCounts2_SN <- plotCounts(dds2, gene=topGenes2_SN[1],
intgroup=c("Disease.State"), returnData=T)
ggplot(geneCounts2_SN, aes(x=Disease.State, y=count, fill=Disease.State)) +
scale_y_log10() + geom_dotplot(binaxis="y", stackdir="center")
#STEN vs INF
topGenes2_SI<-rownames(res2_sten_inf[order(res2_sten_inf$padj),])
geneCounts2_SI <- plotCounts(dds2_SI, gene=topGenes2_SI[1],
intgroup=c("Disease.State"), returnData=T)
ggplot(geneCounts2_SI, aes(x=Disease.State, y=count, fill=Disease.State)) +
scale_y_log10() + geom_dotplot(binaxis="y", stackdir="center")
#INF vs NINF
res2_IN_MA <- results(dds2,
contrast = list("Disease.State_inflamed_vs_non.inflamed"))
DESeq2::plotMA(res2_IN_MA)
#STEN vs NINF
res2_SN_MA <- results(dds2,
contrast = list("Disease.State_stenotic_vs_non.inflamed"))
DESeq2::plotMA(res2_SN_MA)
#STEN vs INF
res2_SI_MA <- results(dds2_SI,
contrast = list("Disease.State1_stenotic_vs_inflamed"))
DESeq2::plotMA(res2_SI_MA)
#INF vs NINF
hist(res2_IN_MA$pvalue[res2_IN_MA$baseMean > 1], breaks=0:20/20, col="royalblue4", border="white", main = "INF vs NINF", xlab = "p-values")
res2_IN_corr <- res2_IN_MA[ !is.na(res2_IN_MA$padj),]
res2_IN_corr <- res2_IN_corr[ !is.na(res2_IN_corr$pvalue), ]
res2_IN_corr <- res2_IN_corr[, -which(names(res2_IN_corr) == "padj")]
res_fdr2_IN<- fdrtool(res2_IN_corr$stat, statistic= "normal", plot = F)
res2_IN_corr[,"padj"] <- p.adjust(res_fdr2_IN$pval, method = "BH")
hist(res_fdr2_IN$pval, col = "royalblue4", main = "INF vs NINF", xlab = "CORRECTED p-values", border="white")
#STEN vs NINF
hist(res2_SN_MA$pvalue[res2_SN_MA$baseMean > 1], breaks=0:20/20, col="royalblue4", border="white", main = "STEN vs NINF", xlab = "p-values")
res2_SN_corr <- res2_SN_MA[ !is.na(res2_SN_MA$padj),]
res2_SN_corr <- res2_SN_corr[ !is.na(res2_SN_corr$pvalue), ]
res2_SN_corr <- res2_SN_corr[, -which(names(res2_SN_corr) == "padj")]
res_fdr2_SN <- fdrtool(res2_SN_corr$stat, statistic= "normal", plot = F)
res2_SN_corr[,"padj"] <- p.adjust(res_fdr2_SN$pval, method = "BH")
hist(res_fdr2_SN$pval, col = "royalblue4", main = "STEN vs NINF", xlab = "CORRECTED p-values", border="white")
#STEN vs INF
hist(res2_SI_MA$pvalue[res2_SI_MA$baseMean > 1], breaks=0:20/20, col="royalblue4", border="white", main = "STEN vs INF", xlab = "p-values")
res2_SI_corr <- res2_SI_MA[ !is.na(res2_SI_MA$padj),]
res2_SI_corr <- res2_SI_corr[ !is.na(res2_SI_corr$pvalue), ]
res2_SI_corr <- res2_SI_corr[, -which(names(res2_SI_corr) == "padj")]
res_fdr2_SI <- fdrtool(res2_SI_corr$stat, statistic= "normal", plot = F)
res2_SI_corr[,"padj"] <- p.adjust(res_fdr2_SI$pval, method = "BH")
hist(res_fdr2_SI$pval, col = "royalblue4", main = "STEN vs INF", xlab = "CORRECTED p-values", border="white")
#IN e SN
topVarGenes2 <- head(order(rowVars(assay(rld2)),decreasing=TRUE),20)
mat2 <- assay(rld2)[topVarGenes2, ]
mat2 <- mat2 - rowMeans(mat2)
new_mat2 <- removeBatchEffect(mat2, batch= colData(rld2)$Gender)
df_clust2 <- as.data.frame(colData(rld2)[,c("Gender","Disease.State")])
pheatmap(new_mat2, annotation_col=df_clust2, main = "Disease.State - Gender heatmap without Batch effect")
#SI
topVarGenes2_SI <- head(order(rowVars(assay(rld2_SI)),decreasing=TRUE),20)
mat2_SI <- assay(rld2_SI)[topVarGenes2_SI, ]
mat2_SI <- mat2_SI - rowMeans(mat2_SI)
new_mat2_SI <- removeBatchEffect(mat2_SI, batch= colData(rld2_SI)$Gender)
df_clust2_SI <- as.data.frame(colData(rld2_SI)[,c("Gender","Disease.State")])
pheatmap(new_mat2_SI, annotation_col=df_clust2_SI, main = "Disease.State - Gender heatmap without Batch effect")
geneList_DESeq2_IN <- res2_inf_noninf$log2FoldChange
names(geneList_DESeq2_IN) <- rownames(res2_inf_noninf)
geneList_DESeq2_SN <- res2_sten_noninf$log2FoldChange
names(geneList_DESeq2_SN) <- rownames(res2_sten_noninf)
geneList_DESeq2_SI <- res2_sten_inf$log2FoldChange
names(geneList_DESeq2_SI) <- rownames(res2_sten_inf)
#INF VS NINF
#Molecular Function
ego2MF_IN <- enrichGO(gene = names(geneList_DESeq2_IN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "MF", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2MF_IN)
goplot(ego2MF_IN)
#Cellular Components
ego2CC_IN <- enrichGO(gene = names(geneList_DESeq2_IN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "CC", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2CC_IN)
goplot(ego2CC_IN)
#Biological Process
ego2BP_IN <- enrichGO(gene = names(geneList_DESeq2_IN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "BP", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2BP_IN)
goplot(ego2BP_IN)
#STEN VS NINF
#Molecular Function
ego2MF_SN <- enrichGO(gene = names(geneList_DESeq2_SN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "MF", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2MF_SN)
goplot(ego2MF_SN)
#Cellular Components
ego2CC_SN <- enrichGO(gene = names(geneList_DESeq2_SN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "CC", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2CC_SN)
goplot(ego2CC_SN)
#Biological Process
ego2BP_SN <- enrichGO(gene = names(geneList_DESeq2_SN), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "BP", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2BP_SN)
goplot(ego2BP_SN)
#STEN VS INF
#Molecular Function
ego2MF_SI <- enrichGO(gene = names(geneList_DESeq2_SI), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "MF", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2MF_SI)
goplot(ego2MF_SI)
#Cellular Components
ego2CC_SI <- enrichGO(gene = names(geneList_DESeq2_SI), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "CC", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2CC_SI)
goplot(ego2CC_SI)
#Biological Process
ego2BP_SI <- enrichGO(gene = names(geneList_DESeq2_SI), OrgDb = org.Hs.eg.db,
keyType = 'ENSEMBL', ont = "BP", pAdjustMethod = "BH",
pvalueCutoff  = 0.1, readable = T)
head(ego2BP_SI)
goplot(ego2BP_SI)
#INF VS NINF
gene_df2_IN <- bitr(names(geneList_DESeq2_IN), fromType = "ENSEMBL",
toType = "ENTREZID", OrgDb = org.Hs.eg.db)
geneList_df2_IN <- res2_inf_noninf$log2FoldChange
names(geneList_df2_IN) <- gene_df2_IN$ENTREZID
kk2_IN <- enrichKEGG(gene = gene_df2_IN$ENTREZID, organism = 'hsa', pvalueCutoff = 0.1)
head(kk2_IN)
#STEN VS NINF
gene_df2_SN <- bitr(names(geneList_DESeq2_SN), fromType = "ENSEMBL",
toType = "ENTREZID", OrgDb = org.Hs.eg.db)
geneList_df2_SN <- res2_sten_noninf$log2FoldChange
names(geneList_df2_SN) <- gene_df2_SN$ENTREZID
kk2_SN <- enrichKEGG(gene = gene_df2_SN$ENTREZID, organism = 'hsa', pvalueCutoff = 0.1)
head(kk2_SN)
#STEN VS INF
gene_df2_SI <- bitr(names(geneList_DESeq2_SI), fromType = "ENSEMBL",
toType = "ENTREZID", OrgDb = org.Hs.eg.db)
geneList_df2_SI <- res2_sten_inf$log2FoldChange
names(geneList_df2_SI) <- gene_df2_SI$ENTREZID
kk2_SI <- enrichKEGG(gene = gene_df2_SI$ENTREZID, organism = 'hsa', pvalueCutoff = 0.3)
head(kk2_SI)
pheatmap(new_mat1, annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect")
pheatmap(new_mat1, annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect")
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap")
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect")
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = T)
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap")
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect")
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = T)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap")
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = T)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = T)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = T)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = T)
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", clustering_method = "complete")
View(metadata)
View(metadata)
View(metadata)
View(metadata)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", column_order = c(metadata$Disease[metadata$Disease== "Crohn's Disease"], metadata$Disease[metadata$Disease== "Healthy Control"]))
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = F)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", column_order = c(metadata$Disease[metadata$Disease== "Crohn's Disease"], metadata$Disease[metadata$Disease== "Healthy Control"]))
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
df_clust1_gen <- as.data.frame(colData(rld1)[,c("Disease","Gender")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = F)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", column_order = c(metadata$Disease[metadata$Disease== "Crohn's Disease"], metadata$Disease[metadata$Disease== "Healthy Control"]))
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
df_clust1_gen <- as.data.frame(colData(rld1)[,c("Disease","Gender")])
pheatmap(head(mat1, 30), annotation_col=df_clust1_gen, main = "Disease - Gender heatmap", cluster_cols = F)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", column_order = c(metadata$Disease[metadata$Disease== "Crohn's Disease"], metadata$Disease[metadata$Disease== "Healthy Control"]))
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", column_order = c(metadata$Disease[metadata$Disease== "Crohn's Disease"], metadata$Disease[metadata$Disease== "Healthy Control"]))
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "new plot", cluster_cols = F)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 30), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,30), annotation_col=df_clust1, main = "Disease - Gendere ", cluster_cols = F)
topDEGenes1_a <- new_mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1_a,30), annotation_col=df_clust1, main = "Disease - Gendere ", cluster_cols = F)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 20), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T)
pheatmap(head(new_mat1, 20), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,20), annotation_col=df_clust1, main = "Disease - Gendere ", cluster_cols = F)
topDEGenes1_a <- new_mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1_a,20), annotation_col=df_clust1, main = "Disease - Gendere ", cluster_cols = F)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 20), annotation_col=df_clust1, main = "Disease - Gender heatmap", cluster_cols = T, sub = "aaaaaaaaaa")
pheatmap(head(new_mat1, 20), annotation_col=df_clust1, main = "Disease - Gender heatmap without Batch effect",cluster_cols = F)
resSig1_LFC <- resSig1[order(abs(resSig1$log2FoldChange), decreasing = T),]
topDEGenes1 <- new_mat1[rownames(resSig1_LFC),]
pheatmap(head(topDEGenes1,20), annotation_col=df_clust1, main = "Disease - Gender", cluster_cols = F)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 20), annotation_col=df_clust1, ggtitle("Disease - Gender heatmap", subtitle = "AAAAAAAA"), cluster_cols = T)
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 20), annotation_col=df_clust1, main = "Disease - Gender heatmap with Batch effect", cluster_cols = T)
title(sub="AAAAAAAA")
library("genefilter")
library("clusterProfiler")
library("pheatmap")
topVarGenes1 <- order(rowVars(assay(rld1)),decreasing=TRUE)
mat1 <- assay(rld1)[topVarGenes1, ]
mat1 <- mat1 - rowMeans(mat1)
new_mat1 <- removeBatchEffect(mat1, batch= colData(rld1)$Gender)
df_clust1 <- as.data.frame(colData(rld1)[,c("Gender","Disease")])
pheatmap(head(mat1, 20), annotation_col=df_clust1, cluster_cols = T)
title(main = "Disease - Gender heatmap with Batch effect", sub="AAAAAAAA")
#Most significantly DE genes
#IN
resSig2_LFC <- resSig2[order(abs(resSig2$log2FoldChange), decreasing = T),]
topDEGenes2 <- new_mat2[rownames(resSig2_LFC),]
#Most significantly DE genes
#IN
res2_inf_noninf_LFC <- res2_inf_noninf[order(abs(res2_inf_noninf$log2FoldChange), decreasing = T),]
topDEGenes2_IN <- new_mat2[rownames(res2_inf_noninf_LFC),]
new_mat2
#Most variant genes among samples
topVarGenes2 <- head(order(rowVars(assay(rld2)),decreasing=TRUE))
mat2 <- assay(rld2)[topVarGenes2, ]
mat2 <- mat2 - rowMeans(mat2)
new_mat2 <- removeBatchEffect(mat2, batch= colData(rld2)$Gender)
df_clust2 <- as.data.frame(colData(rld2)[,c("Gender","Disease.State")])
pheatmap(head(new_mat2, 20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap without Batch effect")
dim(new_mat2)
#Most variant genes among samples
topVarGenes2 <- head(order(rowVars(assay(rld2)),decreasing=TRUE))
mat2 <- assay(rld2)[topVarGenes2, ]
mat2 <- mat2 - rowMeans(mat2)
new_mat2 <- removeBatchEffect(mat2, batch= colData(rld2)$Gender)
df_clust2 <- as.data.frame(colData(rld2)[,c("Gender","Disease.State")])
pheatmap(head(new_mat2, 20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap without Batch effect", cluster_cols = F)
#Most significantly DE genes
#IN
res2_inf_noninf_LFC <- res2_inf_noninf[order(abs(res2_inf_noninf$log2FoldChange), decreasing = T),]
topDEGenes2_IN <- new_mat2[rownames(res2_inf_noninf_LFC),]
res2_inf_noninf_LFC
rld2
topVarGenes2
#Most variant genes among samples
topVarGenes2 <- order(rowVars(assay(rld2)),decreasing=TRUE)
mat2 <- assay(rld2)[topVarGenes2, ]
mat2 <- mat2 - rowMeans(mat2)
new_mat2 <- removeBatchEffect(mat2, batch= colData(rld2)$Gender)
df_clust2 <- as.data.frame(colData(rld2)[,c("Gender","Disease.State")])
pheatmap(head(new_mat2, 20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap without Batch effect", cluster_cols = F)
#Most significantly DE genes
#IN
res2_inf_noninf_LFC <- res2_inf_noninf[order(abs(res2_inf_noninf$log2FoldChange), decreasing = T),]
topDEGenes2_IN <- new_mat2[rownames(res2_inf_noninf_LFC),]
pheatmap(head(topDEGenes2_IN,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap ...", cluster_cols = F)
#SN
res2_sten_noninf_LFC <-res2_sten_noninf[order(abs(res2_sten_noninf$log2FoldChange),
decreasing = T),]
topDEGenes2_SN <- new_mat2[rownames(res2_sten_noninf_LFC),]
pheatmap(head(topDEGenes2_SN,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap ...", cluster_cols = F)
#SI
res2_sten_inf_LFC <-res2_sten_inf[order(abs(res2_sten_inf$log2FoldChange),
decreasing = T),]
topDEGenes2_SI <- new_mat2[rownames(res2_sten_inf_LFC),]
pheatmap(head(topDEGenes2_SI,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap ...", cluster_cols = F)
#Most significantly DE genes
#IN
res2_inf_noninf_LFC <- res2_inf_noninf[order(abs(res2_inf_noninf$log2FoldChange), decreasing = T),]
topDEGenes2_IN <- new_mat2[rownames(res2_inf_noninf_LFC),]
pheatmap(head(topDEGenes2_IN,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap INF vs NINF", cluster_cols = F)
#SN
res2_sten_noninf_LFC <-res2_sten_noninf[order(abs(res2_sten_noninf$log2FoldChange),
decreasing = T),]
topDEGenes2_SN <- new_mat2[rownames(res2_sten_noninf_LFC),]
pheatmap(head(topDEGenes2_SN,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap STEN vs NINF", cluster_cols = F)
#SI
res2_sten_inf_LFC <-res2_sten_inf[order(abs(res2_sten_inf$log2FoldChange),
decreasing = T),]
topDEGenes2_SI <- new_mat2[rownames(res2_sten_inf_LFC),]
pheatmap(head(topDEGenes2_SI,20), annotation_col=df_clust2, main = "Disease.State - Gender heatmap  STEN vs INF", cluster_cols = F)
setwd("C:/Users/122002/Desktop/VERONA/Programming_for_bioinf/RNA_analysisCrohn/data/GENDX000019")
setwd("C:/Users/122002/Desktop/VERONA/Programming_for_bioinf/RNA_analysisCrohn/data/GENDX000019")
setwd("C:/Users/122002/Desktop/VERONA/Programming_for_bioinf/RNA_analysisCrohn/data/GENDX000019")
setwd("C:/Users/122002/Desktop/VERONA/Programming_for_bioinf/RNA_analysisCrohn/data/GENDX000019")
![Original paper](./Paper.png)
(./Paper.png)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(upload.fun = knitr::imgur_upload)
colorize <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
wd()
cd()
![image paper] (Paper.png)
getwd()
![image paper](./Paper.png)
getwd()
Understand the pathophysiology of fibro-stenotic complications due to intestinal inflammation characteristic of Crohn's disease.
